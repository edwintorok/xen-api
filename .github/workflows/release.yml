name: Create release from tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      XAPI_VERSION: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: |
          pip install build
          sudo apt-get install ocaml dune libfindlib-ocaml-dev libdune-ocaml-dev libcmdliner-ocaml-dev

      - name: Generate python package for XenAPI
        run: |
          ./configure --xapi-version=${{ github.ref_name }}
          make python

      - name: Store python distribution artifacts
        uses: actions/upload-artifact@v3
        with:
          name: XenAPI
          path: scripts/examples/python/dist/


  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Retrieve python distribution artifacts
        uses: actions/download-artifact@v3
        with:
          name: XenAPI
          path: dist/

      - name: Draft Release ${{ github.ref_name }}
        run: gh release create ${{ github.ref_name }} --draft --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        run: gh release upload ${{ github.ref_name }} dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: release
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Retrieve python distribution artifacts
        uses: actions/download-artifact@v3
        with:
          name: XenAPI
          path: dist/

      - name: Publish the Python release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
